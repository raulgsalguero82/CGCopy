{
	"info": {
		"_postman_id": "3655d22a-07e2-4283-8d71-c437fb091f80",
		"name": "Productos GraphQL",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14593231"
	},
	"item": [
		{
			"name": "API",
			"item": [
				{
					"name": "Productos",
					"item": [
						{
							"name": "crearProducto",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json()\r",
											"pm.globals.set(\"p_ID\", response.data.crearProducto.id);\r",
											"pm.test(\"Status code es 200\", function () {\r",
											"   pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation{ \r\n  crearProducto(producto: \r\n    { \r\n      nombre: \"Manzana Roja 3\",\r\n    \thistoria: \"Historia de la Manzana Roja\",\r\n    \tdescripcion: \"Descripción de la Manzana Roja\",\r\n    \tcategoria: \"FRUTA\",\r\n    }\r\n  ) {id, nombre} \r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{baseProtocol}}://{{baseURL}}:{{basePort}}/graphql",
									"protocol": "{{baseProtocol}}",
									"host": [
										"{{baseURL}}"
									],
									"port": "{{basePort}}",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "producto",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code es 200\", function () {\r",
											"   pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query($id: String!){\r\n    producto(id: $id)\r\n        {\r\n            id,\r\n            nombre,\r\n            historia\r\n        }\r\n    }",
										"variables": "{\r\n    \"id\": \"{{p_ID}}\"\r\n}"
									}
								},
								"url": {
									"raw": "{{baseProtocol}}://{{baseURL}}:{{basePort}}/graphql",
									"protocol": "{{baseProtocol}}",
									"host": [
										"{{baseURL}}"
									],
									"port": "{{basePort}}",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "productos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code es 200\", function () {\r",
											"   pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "{\r\n    productos\r\n    {\r\n            id,\r\n            nombre,\r\n            historia\r\n    }\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{baseProtocol}}://{{baseURL}}:{{basePort}}/graphql",
									"protocol": "{{baseProtocol}}",
									"host": [
										"{{baseURL}}"
									],
									"port": "{{basePort}}",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "actualizarProducto",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code es 200\", function () {\r",
											"   pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation($id: String!){\r\n    actualizarProducto(id: $id,producto: \r\n        { \r\n            nombre: \"Manzana Roja 3.1\",\r\n            historia: \"Historia de la Manzana Roja\",\r\n            descripcion: \"Descripción de la Manzana Roja\",\r\n            categoria: \"FRUTA\",\r\n        }\r\n    ) {id, nombre} \r\n}\r\n",
										"variables": "{\r\n    \"id\": \"{{p_ID}}\"\r\n}"
									}
								},
								"url": {
									"raw": "{{baseProtocol}}://{{baseURL}}:{{basePort}}/graphql",
									"protocol": "{{baseProtocol}}",
									"host": [
										"{{baseURL}}"
									],
									"port": "{{basePort}}",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "borrarProducto",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code es 200\", function () {\r",
											"   pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation($id: String!){\r\n    borrarProducto(id: $id)\r\n}\r\n",
										"variables": "{\r\n    \"id\": \"{{p_ID}}\"\r\n}"
									}
								},
								"url": {
									"raw": "{{baseProtocol}}://{{baseURL}}:{{basePort}}/graphql",
									"protocol": "{{baseProtocol}}",
									"host": [
										"{{baseURL}}"
									],
									"port": "{{basePort}}",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseProtocol",
			"value": "http"
		},
		{
			"key": "baseURL",
			"value": "127.0.0.1"
		},
		{
			"key": "basePort",
			"value": "3000"
		},
		{
			"key": "apiVersion",
			"value": "v1"
		}
	]
}